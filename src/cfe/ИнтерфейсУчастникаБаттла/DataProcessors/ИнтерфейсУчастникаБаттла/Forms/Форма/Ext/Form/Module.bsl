#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЭтаФорма.ВыбранноеЗадание = 0;
	
	ЭтаФорма.ТекстСлужебногоЗадания = "Выберите задание и нажмите кнопку ""Начать""";
	ЭтаФорма.ТекстТекущегоЗадания = ТекстСлужебногоЗадания;	
	
	Элементы.НадписьТаймер.Заголовок = ЗначениеТаймера(ДлительностьРаунда(), 0);
	
	ЗаполнитьСписокЗаданий();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если НастройкиУстановлены() Тогда	
		                 
		ПриОткрытииФормы();
		
	Иначе
		
		ОткрытьФормуНастроек();			

	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытииФормы()
	
	ОбновитьСостояниеБаттла();
	
	Если ПустаяСтрока(ЭтаФорма.Участник) Тогда	
		ВыбратьУчастника();	
	КонецЕсли;
	
	ПодключитьОбработчикОжидания("ОбновитьСостояниеБаттла", 10, Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыЗадания

&НаКлиенте
Процедура ЗаданияПриАктивизацииСтроки(Элемент)
		
	ЭтаФорма.ТекстТекущегоЗадания = Элемент.ТекущиеДанные.ТекстЗадания;
	
	МожноИграть = Элементы.Задания.ТекущиеДанные.НомерСтроки > 1; 
	
	Элементы.Начать.Доступность = МожноИграть;
	Элементы.Завершить.Доступность = МожноИграть;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Начать(Команда)
	НачатьРаунд();
КонецПроцедуры

&НаКлиенте
Процедура Завершить(Команда)
	ЗавершитьРаунд();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСостояние(Команда)

	ОбновитьСостояниеБаттла();

КонецПроцедуры

&НаКлиенте
Функция НастройкиУстановлены() 
	
	Возврат ЗначениеЗаполнено(СерверБаттла.АдресЭндпойнта());
	
КонецФункции

&НаКлиенте
Функция ОткрытьФормуНастроек()

	ОбработчикЗакрытия = Новый ОписаниеОповещения("ПриЗакрытииФормыНастроек", ЭтотОбъект);
	
	ОткрытьФорму("ОбщаяФорма.БаттлФормаКонстант", , ЭтотОбъект, , , , ОбработчикЗакрытия);
	
КонецФункции

&НаКлиенте
Процедура ПриЗакрытииФормыНастроек(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если НастройкиУстановлены() Тогда
		
		ПриОткрытииФормы();		
		
	Иначе 
		
		ЭтаФорма.Закрыть();  		
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьСписокЗаданий()
	
	Объект.Задания.Очистить();
	
	ВсеЗадания = Неопределено;
	
	Если ЗначениеЗаполнено(СерверБаттла.АдресЭндпойнта()) Тогда
		ВсеЗадания = СерверБаттла.ЗаданияБаттла();
	КонецЕсли;
	
	НоваяСтрока = Объект.Задания.Добавить();
	НоваяСтрока.Наименование = "Задания";
	НоваяСтрока.ТекстЗадания = ЭтаФорма.ТекстСлужебногоЗадания;

	Если ТипЗнч(ВсеЗадания) = Тип("Массив") Тогда
		Для каждого Задание из ВсеЗадания Цикл
			НоваяСтрока = Объект.Задания.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Задание);
		КонецЦикла;	
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура НачатьРаунд()
	
	СостояниеБаттла = СерверБаттла.ТекущееСостояниеБаттла();
	
	// Раунд уже начат и еще не завершен.
	Если СостояниеБаттла.ТипСобытия = СерверБаттла.ТипыСобытий().НачалоРаунда Тогда
		Возврат;
	КонецЕсли;
	
	// Участник свой ход уже сделал, а второй участник еще не начал свой ход.
	Если СостояниеБаттла.ТипСобытия = СерверБаттла.ТипыСобытий().ЗавершениеРаунда 
		И СостояниеБаттла.ТекущийУчастник = ЭтаФорма.Участник Тогда    
		Сообщить("Сейчас ход вашего оппонента");   
		ЗапретитьНачатьРаунд();
		Возврат;
	КонецЕсли;
	
	ЭтаФорма.ВыбранноеЗадание = Элементы.Задания.ТекущиеДанные.НомерСтроки;
	
	ЭтаФорма.ТаймерВремяСтарта = ТекущаяУниверсальнаяДатаВМиллисекундах();
	
	Элементы.Задания.Доступность = Ложь;
	
	ОбновитьТаймер();
	ПодключитьОбработчикОжидания("ОбновитьТаймер", 1,  Ложь); 
	
	Элементы.Начать.Видимость = Ложь;   
	Элементы.МнеПовезет.Видимость = Ложь;
	Элементы.Завершить.Видимость = Истина;
	
	ЭтаФорма.НомерРаунда = СостояниеБаттла.НомерРаунда;
	
	СерверБаттла.НачатьРаунд(СостояниеБаттла.НомерРаунда, Участник, Элементы.Задания.ТекущиеДанные.Идентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьРаунд()

	СерверБаттла.ЗавершитьРаунд(ЭтаФорма.НомерРаунда, Участник, Элементы.Задания.ТекущиеДанные.Идентификатор);

	ОтключитьОбработчикОжидания("ОбновитьТаймер");	
	УстановитьОсновнойЗаголовок();
	Элементы.НадписьТаймер.Заголовок = ЗначениеТаймера(ДлительностьРаунда(), 0);
	ЭтаФорма.ВыбранноеЗадание = 0;   
			
	Элементы.Задания.Доступность = Истина;	
	Элементы.Начать.Видимость = Истина;      
	Элементы.МнеПовезет.Видимость = Истина;
	Элементы.Завершить.Видимость = Ложь;

	УстановитьТекстСлужебногоЗадания("Передайте ход другому участнику");
	
	ОбновитьСостояниеБаттла();

КонецПроцедуры

&НаКлиенте
Процедура ПринудительноЗавершитьРаунд()

	ЗавершитьРаунд();
	
	ПриЗакрытииПредупрежденияРаунд = Новый ОписаниеОповещения("ПриЗакрытииПредупрежденияРаунд", ЭтотОбъект);
	
	ПоказатьПредупреждение(ПриЗакрытииПредупрежденияРаунд, "Закончилось время ¯\_(ツ)_/¯",, "Раунд!");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытииПредупрежденияРаунд(ДопПараметры) Экспорт
	
	ЭтаФорма.Активизировать();	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСостояниеБаттла() Экспорт

	// Текущий игрок еще не завершил свой ход.
	Если ВыбранноеЗадание > 1 Тогда
		Возврат;
	КонецЕсли;
	
	СостояниеБаттла = СостояниеБаттла(); 
	
	НомерРаунда = СостояниеБаттла.НомерРаунда;	
	ЭтаФорма.Заголовок = СтрШаблон("Раунд %1", НомерРаунда);	
	
	Тип_Завершение = СерверБаттла.ТипыСобытий().ЗавершениеРаунда;
	
	Если Не ЗначениеЗаполнено(СостояниеБаттла.ТекущийУчастник) 
	 Или (СостояниеБаттла.ТипСобытия <> Тип_Завершение И СостояниеБаттла.ТекущийУчастник = ЭтаФорма.Участник) 
	 Или (СостояниеБаттла.ТипСобытия = Тип_Завершение И СостояниеБаттла.ТекущийУчастник <> ЭтаФорма.Участник) Тогда    
		РазрешитьНачатьРаунд();
		Если Не ЗначениеЗаполнено(СостояниеБаттла.ТекущийУчастник) Тогда
			// Участник может начать выполнять свой ход.   
			УстановитьТекстСлужебногоЗадания("Выберите задание и начните свой раунд");
        КонецЕсли;
	Иначе
		// Это ход оппонента, текущий участник ждет.
		ЗапретитьНачатьРаунд();
	КонецЕсли;
	
	СтрокаТекущегоЗадания = Объект.Задания[0];		
	
	Если Элементы.Задания.ТекущиеДанные <> Неопределено Тогда
		
		ИдТекущегоЗадания = Элементы.Задания.ТекущиеДанные.Идентификатор;
		
		ЗаполнитьСписокЗаданий();
		
		НайденныеСтроки = Объект.Задания.НайтиСтроки(Новый Структура("Идентификатор", ИдТекущегоЗадания));
		Если НайденныеСтроки.Количество() > 0 Тогда
			СтрокаТекущегоЗадания = НайденныеСтроки[0];
		КонецЕсли;
		
	КонецЕсли;
	
	Элементы.Задания.ТекущаяСтрока = СтрокаТекущегоЗадания.ПолучитьИдентификатор();
	
	Если Объект.Задания.Количество() < 2 Тогда
		ЗапретитьНачатьРаунд("Кажется, задачи закончились :-(");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьЭлементовУправленияИгрока(Знач Разрешить)
	
	Элементы.Начать.Доступность = Разрешить;
	Элементы.Завершить.Доступность = Разрешить;
	Элементы.Задания.Доступность = Разрешить;
	Элементы.МнеПовезет.Доступность = Разрешить;
	
	ЭтаФорма.РаундРазрешен = Разрешить;
	
КонецПроцедуры                                                      

&НаКлиенте
Процедура РазрешитьНачатьРаунд()
	УстановитьДоступностьЭлементовУправленияИгрока(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ЗапретитьНачатьРаунд(Знач ТекстСообщения = "")

	Если ПустаяСтрока(ТекстСообщения) Тогда
		ТекстСообщения = "Передайте ход другому участнику";
	КонецЕсли;
	
	УстановитьДоступностьЭлементовУправленияИгрока(Ложь);
	
	УстановитьТекстСлужебногоЗадания(ТекстСообщения);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьТекстСлужебногоЗадания(ТекстЗадания)
	
	ЭтаФорма.ТекстСлужебногоЗадания = ТекстЗадания;
	
	Объект.Задания[0].ТекстЗадания = ТекстЗадания; 
	Элементы.Задания.ТекущаяСтрока = Объект.Задания[0].ПолучитьИдентификатор();
	ЭтаФорма.ТекстТекущегоЗадания = Объект.Задания[0].ТекстЗадания;
	
	Элементы.Задания.Обновить();  
	Элементы.ТекстТекущегоЗадания.ОбновитьТекстРедактирования();
	
КонецПроцедуры

&НаСервере
Функция СостояниеБаттла()
	
	Возврат СерверБаттла.ТекущееСостояниеБаттла();
	
КонецФункции

&НаКлиенте
Функция ВыбратьУчастника()
	
	СписокВыбора = Новый СписокЗначений;
	СписокВыбора.ЗагрузитьЗначения(УчастникиБаттла());
	
	ОбработчикВыбора = Новый ОписаниеОповещения("ПриВыбореУчастника", ЭтотОбъект); 
	СписокВыбора.ПоказатьВыборЭлемента(ОбработчикВыбора, "Выберите участника");
	
КонецФункции

&НаКлиенте
Процедура ПриВыбореУчастника(ВыбранныйЭлемент, ДопПараметры) Экспорт
	
	Если ВыбранныйЭлемент = Неопределено Тогда
		
		Сообщить("Не выбран участник!");
		ЭтаФорма.Закрыть();  
		
	Иначе
		ЭтаФорма.Участник = ВыбранныйЭлемент.Значение;

		ОбновитьСостояниеБаттла();
		
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Функция УчастникиБаттла()
	
    Возврат СерверБаттла.УчастникиБаттла();
		
КонецФункции

#КонецОбласти

#Область Таймер

&НаКлиенте
Процедура ОбновитьТаймер() Экспорт
	
    // ДлинаРаунда = ДлинаРаунда();
	
	ДлительностьРаунда = ДлительностьРаунда();	
	ДлительностьРаундаСекунд = 60 * ДлительностьРаунда;
	
	ПараметрыЗаголовка = ПараметрыЗаголовкаТаймера(); 
	
	ОсновнойЗаголовок = ОсновнойЗаголовокСистемы(ПараметрыЗаголовка.Заголовок, ПараметрыЗаголовка.Префикс, ПараметрыЗаголовка.Суффикс);
	
	Прошло = (ТекущаяУниверсальнаяДатаВМиллисекундах() - ЭтаФорма.ТаймерВремяСтарта) / 1000;
	Прошло = Цел(Прошло);
	
	ОстатокВремениРаунда = ДлительностьРаундаСекунд - Прошло;
	
	Если ОстатокВремениРаунда <= 0 Тогда
		
		ПринудительноЗавершитьРаунд();                                             
		Возврат;
				
	КонецЕсли;
	
	ОстатокРаундаМинуты = Цел(ОстатокВремениРаунда / 60);
	ОстатокРаундаСекунды = Формат(ОстатокВремениРаунда % 60, "ЧЦ=2; ЧН=; ЧВН=");
	
	ЗначениеТаймера = ЗначениеТаймера(ОстатокРаундаМинуты, ОстатокРаундаСекунды); 
	Элементы.НадписьТаймер.Заголовок = ЗначениеТаймера;	
	
	ЗаголовокПриложения = ПараметрыЗаголовка.Префикс + ПараметрыЗаголовка.Заголовок + ЗначениеТаймера + ПараметрыЗаголовка.Суффикс + ОсновнойЗаголовок;
	КлиентскоеПриложение.УстановитьЗаголовок(ЗаголовокПриложения);
	
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ЗначениеТаймера(Минуты, Секунды)

	Возврат СтрШаблон("%1:%2", Формат(Минуты, "ЧЦ=2; ЧН=00; ЧВН="), Формат(Секунды, "ЧЦ=2; ЧН=00; ЧВН="));
		
КонецФункции

&НаКлиенте
Функция ОсновнойЗаголовокСистемы(ЗаголовокТаймера, ПрефиксЗаголовкаТаймера, СуффиксЗаголовкаТаймера)
	
	ТекущийЗаголовокПриложения = КлиентскоеПриложение.ПолучитьЗаголовок();
	ДлинаСуффиксаЗаголовка = СтрДлина(СуффиксЗаголовкаТаймера);

	НачальнаяПозицияДемоТаймера = СтрНайти(ТекущийЗаголовокПриложения, ЗаголовокТаймера) > 0;
	
	Если НачальнаяПозицияДемоТаймера > 0 Тогда
		ОсновнойЗаголовок = Сред(ТекущийЗаголовокПриложения, СтрНайти(ТекущийЗаголовокПриложения, СуффиксЗаголовкаТаймера, НаправлениеПоиска.СНачала, НачальнаяПозицияДемоТаймера) + ДлинаСуффиксаЗаголовка);
	Иначе
		ОсновнойЗаголовок = ТекущийЗаголовокПриложения;
	КонецЕсли;
	
	ОсновнойЗаголовок = СтрЗаменить(ОсновнойЗаголовок, "[КОПИЯ]", "");

	Возврат ОсновнойЗаголовок;

КонецФункции

&НаКлиенте
Функция ПараметрыЗаголовкаТаймера()
	
	ПараметрыЗаголовка = Новый Структура;
	
	ПараметрыЗаголовка.Вставить("Заголовок", "Раунд: ");
	ПараметрыЗаголовка.Вставить("Префикс", "[");
	ПараметрыЗаголовка.Вставить("Суффикс", "] ");
	
	Возврат ПараметрыЗаголовка;
	
КонецФункции

&НаКлиенте
Процедура УстановитьОсновнойЗаголовок()
	
	Перем ОсновнойЗаголовок, ПараметрыЗаголовка;
	
	ПараметрыЗаголовка = ПараметрыЗаголовкаТаймера(); 
	
	ОсновнойЗаголовок = ОсновнойЗаголовокСистемы(ПараметрыЗаголовка.Заголовок, ПараметрыЗаголовка.Префикс, ПараметрыЗаголовка.Суффикс);
	
	КлиентскоеПриложение.УстановитьЗаголовок(ОсновнойЗаголовок);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ДлительностьРаунда()
	Возврат 7;
КонецФункции

&НаКлиенте
Процедура ИзменитьУчастника(Команда)
	
	ВыбратьУчастника();
	
КонецПроцедуры

&НаКлиенте
Процедура МнеПовезет(Команда)
	
	КоличествоЗадач = Объект.Задания.Количество();
	
	ГСЧ = Новый ГенераторСлучайныхЧисел(ТекущаяУниверсальнаяДатаВМиллисекундах());  
	НомерСтроки = ГСЧ.СлучайноеЧисло(2, КоличествоЗадач);
	
	ИндексСтроки = НомерСтроки - 1;
	
	Элементы.Задания.ТекущаяСтрока = Объект.Задания[ИндексСтроки].ПолучитьИдентификатор();
	ЭтаФорма.ТекстТекущегоЗадания = Объект.Задания[ИндексСтроки].ТекстЗадания;
	
	НачатьРаунд();
	
КонецПроцедуры

#КонецОбласти     

