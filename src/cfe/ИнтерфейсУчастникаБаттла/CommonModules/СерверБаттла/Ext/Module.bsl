Функция ЗаданияБаттла() Экспорт
	
	Параметры = НовыйПараметрыЗапроса(ТекущийБаттл());
	Возврат ВыполнитьЗапрос("tasks", Параметры);
		
КонецФункции            

Функция ТекущееСостояниеБаттла() Экспорт
	
	Параметры = НовыйПараметрыЗапроса(ТекущийБаттл());
	Возврат ВыполнитьЗапрос("state", Параметры);
	
КонецФункции       

Функция УчастникиБаттла() Экспорт
	
	Параметры = НовыйПараметрыЗапроса(ТекущийБаттл());
	Возврат ВыполнитьЗапрос("competitors", Параметры);	
	
КонецФункции  

Процедура НачатьРаунд(НомерРаунда, Участник, Задание) Экспорт
	
	Параметры = НовыйПараметрыЗапроса(ТекущийБаттл());
	Параметры.Вставить("round", НомерРаунда);
	Параметры.Вставить("competitor", Участник);
	Параметры.Вставить("task", Задание);
	
	ВыполнитьЗапрос("start", Параметры, Истина);
		
КонецПроцедуры

Процедура ЗавершитьРаунд(НомерРаунда, Участник, Задание) Экспорт
	
	Параметры = НовыйПараметрыЗапроса(ТекущийБаттл());
	Параметры.Вставить("round", НомерРаунда);
	Параметры.Вставить("competitor", Участник);
	Параметры.Вставить("task", Задание);
	
	ВыполнитьЗапрос("finish", Параметры, Истина);
	
КонецПроцедуры                       

Функция ТекущийБаттл() Экспорт
	
	ТекущийБаттл = Константы.Баттл_КодТекущегоБаттла.Получить();
	
	Если ПустаяСтрока(ТекущийБаттл) Тогда
		
		ДанныеТекБаттла = ДанныеТекущегоБаттла();
		ТекущийБаттл = ДанныеТекБаттла.Код;          
		
		Константы.Баттл_КодТекущегоБаттла.Установить(ТекущийБаттл);
		
	КонецЕсли;
	
	Возврат ТекущийБаттл; 
	
КонецФункции

Функция ДанныеТекущегоБаттла() Экспорт
	
	Возврат ВыполнитьЗапрос("current");  
	
КонецФункции

Функция ТипыСобытий() Экспорт

	ДоступныеТипы = Новый Структура;
	ДоступныеТипы.Вставить("НачалоРаунда", "НачалоРаунда");
	ДоступныеТипы.Вставить("ЗавершениеРаунда", "ЗавершениеРаунда");
	
	Возврат ДоступныеТипы;
	
КонецФункции

Функция АдресЭндпойнта(Знач Метод = "") Экспорт
	                                                        
	АдресСервера = Константы.Баттл_АдресСервераБаттла.Получить(); 
	Возврат АдресСервера + Метод;		
		
КонецФункции      

Функция ВыполнитьЗапрос(Знач Метод, Знач ПараметрыЗапроса = Неопределено, Знач МетодPOST = Ложь)
	
	Если Не ЗначениеЗаполнено(ПараметрыЗапроса) Тогда
		ПараметрыЗапроса = НовыйПараметрыЗапроса();
	КонецЕсли;
		
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ПараметрыПреобразованияJSON", Новый Структура("ПрочитатьВСоответствие", Ложь));
	
	Если МетодPOST Тогда
		Ответ = Баттл_КоннекторHTTP.PostJson(АдресЭндпойнта(Метод), ПараметрыЗапроса, ДополнительныеПараметры);
	Иначе
		Ответ = Баттл_КоннекторHTTP.GetJson(АдресЭндпойнта(Метод), ПараметрыЗапроса, ДополнительныеПараметры);
	КонецЕсли;
	
	Если Ответ.Свойство("Ошибка") Тогда   
		ЗаписьЖурналаРегистрации("БаттлАналитиков", УровеньЖурналаРегистрации.Ошибка,,  Ответ.Ошибка);
		ВызватьИсключение Ответ.Ошибка;
	КонецЕсли;
	
	Если Ответ.Результат = "OK" Тогда
		Ответ.Результат = Истина;
	КонецЕсли;
	
	Возврат Ответ.Результат;
	
КонецФункции  

Функция НовыйПараметрыЗапроса(Знач КодБаттла = Неопределено) Экспорт
	
	ПараметрыЗапроса = Новый Структура;
	
	Если КодБаттла <> Неопределено Тогда
		ПараметрыЗапроса.Вставить("battle", КодБаттла);
	КонецЕсли;
	
	Возврат ПараметрыЗапроса;
	
КонецФункции
