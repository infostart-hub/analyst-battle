Функция СостояниеБаттла(Баттл) Экспорт

	Состояние = Новый Структура;
	Состояние.Вставить("НомерРаунда", 1);
	Состояние.Вставить("ТекущийУчастник", "");
	Состояние.Вставить("ТипСобытия", Неопределено);	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Баттл", Баттл);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Т.Период КАК Период,
	|	Т.Баттл КАК Баттл,
	|	Т.НомерРаунда КАК НомерРаунда,
	|	ПРЕДСТАВЛЕНИЕ(Т.ТипСобытия) КАК ТипСобытия,
	|	Т.Участник.Наименование КАК Участник,
	|	Т.Задание КАК Задание
	|ИЗ
	|	РегистрСведений.СостояниеБаттла.СрезПоследних(, Баттл = &Баттл) КАК Т";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда

		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();                        
		
		Состояние.НомерРаунда = Выборка.НомерРаунда;
		Состояние.ТекущийУчастник = Выборка.Участник;
		Состояние.ТипСобытия = Выборка.ТипСобытия;
		
		Если РаундЗавершен(Баттл, Выборка.НомерРаунда) Тогда
			Состояние.НомерРаунда = Состояние.НомерРаунда + 1;				
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Состояние;		
	
КонецФункции       

Функция РаундЗавершен(Баттл, НомерРаунда) Экспорт
	
	// Раунд завершен, если оба (два) участника завершили задания в этом раунде.
	// (пока в нашем баттле одновременно принимать участие могут двое участников)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Баттл", Баттл);     
	Запрос.УстановитьПараметр("НомерРаунда", НомерРаунда);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Т.Участник) КАК КоличествоУчастников
	|ИЗ
	|	РегистрСведений.СостояниеБаттла КАК Т
	|ГДЕ
	|	Т.НомерРаунда = &НомерРаунда
	|	И Т.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытий.ЗавершениеРаунда)";  
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		
		Возврат Выборка.КоличествоУчастников = 2;  // FIXME
		
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции    

Функция ЗаданияБаттла(Баттл) Экспорт
	
	Запрос = Новый Запрос;         
	// Запрос.УстановитьПараметр("Баттл", Баттл);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Т.Код КАК Идентификатор,
	|	Т.Наименование КАК Наименование,
	|	Т.ТекстЗадания КАК ТекстЗадания,
	|	Т.Категория.Наименование КАК Категория
	|ИЗ
	|	Справочник.Задания КАК Т
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеБаттла КАК Состояние
	|		ПО Т.Ссылка = Состояние.Задание
	|			И (Состояние.ТипСобытия = ЗНАЧЕНИЕ(Перечисление.ТипыСобытий.ЗавершениеРаунда))
	|ГДЕ
	|	НЕ Т.ЭтоГруппа
	|	И НЕ Т.ПометкаУдаления
	|	И Состояние.НомерРаунда ЕСТЬ NULL";
		
	МассивЗаданий = Новый Массив;

	Выборка = Запрос.Выполнить().Выбрать();	
	Пока Выборка.Следующий() Цикл
		Задание = НовоеЗадание(Выборка.Идентификатор, Выборка.Наименование, Выборка.ТекстЗадания, Выборка.Категория);
		МассивЗаданий.Добавить(Задание);
	КонецЦикла;
	
	Возврат МассивЗаданий;

КонецФункции                                    

Функция НовоеЗадание(Идентификатор, Наименование, ТекстЗадания, Категория) 
	
	Задание = Новый Структура;
	Задание.Вставить("Идентификатор", Идентификатор);
	Задание.Вставить("Наименование", Наименование);
	Задание.Вставить("ТекстЗадания", ТекстЗадания);
	Задание.Вставить("Категория", Категория);
	
	Возврат Задание;
	
КонецФункции

Функция НачатьРаунд(Знач Баттл, Знач НомерРаунда, Знач Участник, Знач Задание) Экспорт
	
	РегистрыСведений.СостояниеБаттла.ДобавитьЗапись(Баттл, НомерРаунда, Перечисления.ТипыСобытий.НачалоРаунда, Участник, Задание);
	
КонецФункции

Функция ЗавершитьРаунд(Знач Баттл, Знач НомерРаунда, Знач Участник, Знач Задание) Экспорт
		
	РегистрыСведений.СостояниеБаттла.ДобавитьЗапись(Баттл, НомерРаунда, Перечисления.ТипыСобытий.ЗавершениеРаунда, Участник, Задание);
	
КонецФункции

Функция УчастникиБаттла(Знач Баттл) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Баттл", Баттл);
 	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Т.Наименование КАК Наименование
	|ИЗ
	|	Справочник.Участники КАК Т
	|ГДЕ
	|	НЕ Т.ПометкаУдаления";
	
	Участники = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Наименование");
	
	Возврат Участники;
	
КонецФункции